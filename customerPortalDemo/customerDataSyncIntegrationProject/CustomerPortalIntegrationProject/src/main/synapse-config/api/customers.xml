<?xml version="1.0" encoding="UTF-8"?>
<api context="/customers" name="customers" xmlns="http://ws.apache.org/ns/synapse">
    <resource methods="POST">
        <inSequence>
            <property expression="json-eval($.payloadEmail)" name="payloadEmail" scope="default" type="STRING"/>
            <property expression="json-eval($.payloadCompanyName)" name="payloadCompanyName" scope="default" type="STRING"/>
            <property expression="json-eval($.payloadProjectDesc)" name="payloadProjectDesc" scope="default" type="STRING"/>
            <property expression="json-eval($.payloadUsedProducts)" name="payloadUsedProducts" scope="default" type="STRING"/>
            <script language="js"><![CDATA[mc.setProperty("googlespreadsheet.accessToken",java.lang.System.getenv("GOOGLE_SPREDSHEET_ACCESS_TOKEN"));
            mc.setProperty("googlespreadsheet.refreshToken",java.lang.System.getenv("GOOGLE_SPREDSHEET_REFRESH_TOKEN"));
            mc.setProperty("googlespreadsheet.clientId",java.lang.System.getenv("GOOGLE_SPREDSHEET_CLIENT_ID"));
            mc.setProperty("googlespreadsheet.clientSecret",java.lang.System.getenv("GOOGLE_SPREDSHEET_CLIENT_SECRET"));
            mc.setProperty("googlespreadsheet.apiUrl",java.lang.System.getenv("GOOGLE_SPREDSHEET_API_URL"));
            mc.setProperty("googlespreadsheet.spreadsheetId",java.lang.System.getenv("GOOGLE_SPREDSHEET_ID"));
            mc.setProperty("googlespreadsheet.range",java.lang.System.getenv("GOOGLE_SPREDSHEET_RANGE"));
            mc.setProperty("googlespreadsheet.valueInputOption",java.lang.System.getenv("GOOGLE_SPREDSHEET_VALUE_INPUT_OPTION"));
            mc.setProperty("customer.dataservice.endpoint",java.lang.System.getenv("CUSTOMER_DATA_SERVICE_ENDPOINT"));]]></script>
            <enrich>
                <source clone="true" type="body"/>
                <target property="REQUEST_PAYLOAD" type="property"/>
            </enrich>
            <header name="SOAPAction" scope="transport" value="urn:insert_Customers_operation"/>
            <payloadFactory media-type="xml">
                <format>
                    <soapenv:Envelope xmlns:demo="http://demo.wso2.com" xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">
                        <soapenv:Header/>
                        <soapenv:Body>
                            <demo:insert_Customers_operation>
                                <demo:company_name>$1</demo:company_name>
                                <demo:email>$2</demo:email>
                                <demo:project_description>$3</demo:project_description>
                                <demo:used_products>$4</demo:used_products>
                            </demo:insert_Customers_operation>
                        </soapenv:Body>
                    </soapenv:Envelope>
                </format>
                <args>
                    <arg evaluator="xml" expression="get-property('payloadCompanyName')"/>
                    <arg evaluator="xml" expression="get-property('payloadEmail')"/>
                    <arg evaluator="xml" expression="get-property('payloadProjectDesc')"/>
                    <arg evaluator="xml" expression="get-property('payloadUsedProducts')"/>
                </args>
            </payloadFactory>
            <header expression="get-property('customer.dataservice.endpoint')" name="To" scope="default"/>
            <call>
                <endpoint>
                    <default/>
                </endpoint>
            </call>
            <enrich>
                <source clone="true" property="REQUEST_PAYLOAD" type="property"/>
                <target type="body"/>
            </enrich>
            <script language="js"><![CDATA[var companyName = mc.getProperty("payloadCompanyName").toString(); 
            var email = mc.getProperty("payloadEmail").toString(); 
            var projectDesc = mc.getProperty("payloadProjectDesc").toString();
            var usedProducts = mc.getProperty("payloadUsedProducts").toString();
            var res = "[['".concat(companyName).concat("','").concat(email).concat("','").concat(projectDesc).concat("','").concat(usedProducts).concat("']]");           
			mc.setProperty("values",res);]]></script>
            <googlespreadsheet.init>
                <accessToken>{$ctx:googlespreadsheet.accessToken}</accessToken>
                <apiUrl>{$ctx:googlespreadsheet.apiUrl}</apiUrl>
                <clientId>{$ctx:googlespreadsheet.clientId}</clientId>
                <clientSecret>{$ctx:googlespreadsheet.clientSecret}</clientSecret>
                <refreshToken>{$ctx:googlespreadsheet.refreshToken}</refreshToken>
            </googlespreadsheet.init>
            <googlespreadsheet.addRowsColumnsData>
                <spreadsheetId>{$ctx:googlespreadsheet.spreadsheetId}</spreadsheetId>
                <range>{$ctx:googlespreadsheet.range}</range>
                <valueInputOption>{$ctx:googlespreadsheet.valueInputOption}</valueInputOption>
                <values>{$ctx:values}</values>
            </googlespreadsheet.addRowsColumnsData>
            <property expression="$axis2:HTTP_SC" name="addRowsColumnsDataStatusCode" scope="default" type="STRING"/>
            <filter regex="true" source="get-property('addRowsColumnsDataStatusCode') != 200">
                <then>
                    <log level="full"/>
                    <property name="message" scope="default" type="STRING" value="Unable to Import the data into Google Sheets."/>
                    <loopback/>
                </then>
                <else>
                    <log level="full"/>
                    <property name="message" scope="default" type="STRING" value="Success: Successfully Import the Data Into Google Sheets and Data Service."/>
                    <loopback/>
                </else>
            </filter>
            <respond/>
            <send/>
        </inSequence>
        <outSequence>
            <property name="messageType" scope="axis2" type="STRING" value="application/json"/>
            <log>
                <property name="WhereAReWE" value="AT out sequence"/>
            </log>
            <payloadFactory media-type="json">
                <format>
                    {
                    "Response":{
                    "process":"ImportDataIntoSpreadsheet",
                    "activityResponse":"$1"
                    }
                    }
                </format>
                <args>
                    <arg evaluator="xml" expression="get-property('message')"/>
                </args>
            </payloadFactory>
            <log/>
            <send/>
        </outSequence>
        <faultSequence/>
    </resource>
</api>
